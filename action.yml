name: "Install Theos"
description: "Install Theos and prepare it for building projects"
author: "Randomblock1"
branding:
  icon: download-cloud
  color: purple

inputs:
  theos-dir:
    description: "Where to install Theos"
    required: false
    default: ${{ github.workspace }}/theos
  theos-src:
    description: "Where to clone Theos from (git URL)"
    required: false
    default: "https://github.com/theos/theos"
  theos-sdks:
    description: "Where to clone the iOS SDKs from (GitHub repository URL)"
    required: false
    default: "https://github.com/theos/sdks"
  theos-sdks-branch:
    description: "Which branch to clone from SDK repo"
    required: false
    default: "master"
  orion:
    description: "Whether to enable Orion, which adds support for Swift tweaks"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Setup (MacOS)
      shell: bash
      if: runner.os == 'macOS'
      run: |
        brew install ldid make
        PATH="$(brew --prefix make)/libexec/gnubin:$PATH" >> $GITHUB_ENV

    - name: Setup (Linux)
      shell: bash
      if: runner.os == 'Linux'
      run: |
        sudo apt update
        sudo apt install -y bash curl build-essential fakeroot rsync perl zip git libxml2 libz3-dev zstd libtinfo5 libplist-utils

    - name: Setup environment
      shell: bash
      run: echo "THEOS=${{ inputs.theos-dir }}" >> $GITHUB_ENV

    - name: Download Theos
      shell: bash
      run: |
        if [ ! -d "${{ inputs.theos-dir }}" ]; then
          git clone ${{ inputs.theos-src }} ${{ inputs.theos-dir }} --recursive
          echo "Theos successfully downloaded."
        else
          echo "Theos already cached."
        fi

    - name: Get toolchain (Linux)
      shell: bash
      if: runner.os == 'Linux'
      run: |
        if [[ "$(ls ${{ inputs.theos-dir }}/sdks)" ]]; then
          echo "Linux toolchain already cached, skipping..."
        else
          TMP_DL=$(mktemp -d)
          curl -LO https://github.com/CRKatri/llvm-project/releases/download/swift-5.3.2-RELEASE/swift-5.3.2-RELEASE-ubuntu20.04.tar.zst
          tar -xf swift-5.3.2-RELEASE-ubuntu20.04.tar.zst -C $TMP_DL
          mkdir -p $THEOS/toolchain/linux/iphone $THEOS/toolchain/swift
          mv $TMP/swift-5.3.2-RELEASE-ubuntu20.04/* $THEOS/toolchain/linux/iphone/
          rm -r swift-5.3.2-RELEASE-ubuntu20.04.tar.zst $TMP_DL
          curl -L https://github.com/ProcursusTeam/ldid/releases/latest/download/ldid_linux_x86_64 -o $THEOS/toolchain/linux/iphone/bin/ldid
          rm -Rf $TMP_DL
          git clone https://github.com/theos/sdks.git $THEOS/sdks
        fi

    - name: Enable Orion
      shell: bash
      if: inputs.orion == 'true'
      run: |
        cd ${{ inputs.theos-dir }}
        git fetch
        git checkout orion
        git submodule update --init
